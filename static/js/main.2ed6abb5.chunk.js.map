{"version":3,"sources":["images/images/html-css-javascript-lg.jpg","images/images/html-css-javascript.jpg","components/Header.js","components/Footer.js","components/Navbar.js","components/Particle.js","components/index.js","components/Resume.js","components/Projets.js","components/Contact.js","App.js","serviceWorker.js","index.js","media/avatar3.png"],"names":["module","exports","useStyles","makeStyles","theme","avatar","width","spacing","height","margin","title","color","subtitle","marginBottom","typedContainer","position","top","left","transform","textAlign","zIndex","Header","classes","Box","className","Grid","container","justify","Avatar","src","alt","Typography","variant","strings","typeSpeed","backSpeed","loop","root","minWidth","maxWidth","fill","fontSize","Footer","BottomNavigation","style","background","BottomNavigationAction","padding","icon","menuSliderContainer","display","listItem","menuItems","listIcon","listText","listPath","AssignmentInd","Apps","ContactMail","Navbar","slider","useState","right","state","setState","toggleSlider","open","AppBar","Toolbar","IconButton","onClick","ArrowBack","anchor","onClose","component","Divider","List","map","lsItem","key","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","particlesCanva2","opacity","Particle","canvasClassName","params","particles","number","value","density","enable","value_area","shape","type","stroke","size","random","anim","speed","size_min","sync","opacity_min","Home","mainContainer","timeLine","content","border","clear","breakpoints","up","timeLineItem","borderBottom","borderStyle","borderColor","borderWidth","float","timeLineYear","lineHeight","heading","textTransform","subHeading","Resume","align","useStyle","Projets","item","xs","sm","md","Card","CardActionArea","CardMedia","image","project1","CardContent","gutterBottom","CardActions","href","target","Button","project2","form","bouton","marginTop","messageSent","InputField","withStyles","TextField","initialState","name","email","message","nameError","emailError","messageError","msgSent","Contact","props","handleChange","e","isCheckbox","checked","validate","includes","handleSubmit","preventDefault","emailjs","then","catch","bind","this","onSubmit","id","fullWidth","onChange","label","inputProps","multiline","rows","endIcon","Component","App","CssBaseline","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ed6abb5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/html-css-javascript-lg.54fd4234.jpg\";","module.exports = __webpack_public_path__ + \"static/media/html-css-javascript.2c7701aa.jpg\";","import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Avatar, Grid, Box } from \"@material-ui/core\";\nimport Typed from \"react-typed\";\nimport avatar from \"../media/avatar3.png\";\n\n\n// CSS STYLES\nconst useStyles = makeStyles(theme=>({\n    avatar: {\n        width: theme.spacing(15),\n        height: theme.spacing(15),\n        margin: theme.spacing(1)\n    },\n    title: {\n        color: \"tomato\",\n    },\n    subtitle: {\n        color: \"tan\",\n        marginBottom: '3rem',\n    },\n    typedContainer: {\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        // width: \"100vw\",\n        textAlign: \"center\",\n        zIndex:1,\n    }\n\n\n}));\n\n\nconst Header = () => {\n\n    const classes = useStyles()\n\n    return (\n        <Box className={classes.typedContainer}>\n            <Grid container justify=\"center\">\n                <Avatar className={classes.avatar} src={avatar} alt=\"Issa DEMIRCI\" />\n            </Grid>\n            <Typography className={classes.title} variant=\"h4\">\n                <Typed className=\"avatar\" strings={[\"Issa DEMIRCI\"]} typeSpeed={40} />\n            </Typography>\n            <br />\n            <Typography className={classes.subtitle} variant=\"h5\">\n                <Typed strings={[\"Web Developement\", \"Web Design\", \"Front-End\", \"Back-End\", \"Developper full-stack\"]} \n                typeSpeed={60} backSpeed={70} loop />\n            </Typography>\n        </Box>\n    );\n};\n\n\n\n\n\nexport default Header;","import React from 'react';\nimport { makeStyles } from \"@material-ui/styles\";\nimport { BottomNavigation, BottomNavigationAction } from \"@material-ui/core\";\nimport Twitter from \"@material-ui/icons/Twitter\";\nimport LinkedIn from \"@material-ui/icons/LinkedIn\";\nimport GitHub from \"@material-ui/icons/GitHub\";\n\n\nconst useStyles = makeStyles({\n    root: {\n        \"& .MuiBottomNavigationAction-root\": {\n            minWidth: 0,\n            maxWidth: 250,\n        },\n        \"& .MuiSvgIcon-root\": {\n            fill: \"tan\",\n            \"&:hover\": {\n                fill: \"tan\",\n                fontSize: \"1.8rem\",\n            },\n        },\n    },\n});\n\nconst Footer = () => {\n\n    const classes = useStyles();\n\n    return (\n        <BottomNavigation width=\"auto\" style={{background:\"#222\"}} >\n\n            <BottomNavigationAction\n            className={classes.root} \n            style={{padding: 0}}\n            icon={<Twitter />}\n            />\n\n            <BottomNavigationAction\n            className={classes.root} \n            style={{padding: 0}}\n            icon={<LinkedIn />}\n            />\n\n            <BottomNavigationAction\n            className={classes.root} \n            style={{padding: 0}}\n            icon={<GitHub />}\n            />\n        </BottomNavigation>\n    );\n};\n\nexport default Footer;","import React, {useState} from 'react';\nimport {Link} from \"react-router-dom\";\n// import { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport MobilRightMenuSlider from '@material-ui/core/Drawer';\nimport avatar from \"../media/avatar3.png\";\nimport Footer from './Footer';\n\nimport {\n    AppBar,\n    Toolbar,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    IconButton,\n    Avatar,\n    Divider,\n    List,\n    Typography,\n    Box, \n} from \"@material-ui/core\";\nimport {\n    ArrowBack,\n    AssignmentInd,\n    Home,\n    Apps,\n    ContactMail\n} from \"@material-ui/icons\";\n\n\n/********** CSS STYLES  ********/\nconst useStyles = makeStyles(theme=>({\n    menuSliderContainer: {\n        width: 250,\n        height: \"100%\",\n        background: \"#511\",\n    },\n    avatar: {\n        display: \"block\",\n        margin: \"0.5rem auto\",\n        width: theme.spacing(13),\n        height: theme.spacing(13)\n    },\n    listItem: {\n        color: \"tan\",\n    }\n}))\n/*******************************/\n\nconst menuItems = [\n    {\n        listIcon: <Home />,\n        listText: \"Home\",\n        listPath: \"/portfolio2\",\n    },\n    {\n        listIcon: <AssignmentInd />,\n        listText: \"Expérience professionnelle\",\n        listPath: \"/resume\",\n        \n    },\n    {\n        listIcon: <Apps />,\n        listText: \"Projets\",\n        listPath: \"/projets\",\n\n    },\n    {\n        listIcon: <ContactMail />,\n        listText: \"Contacter\",\n        listPath: \"/contact\",\n\n    },\n]\n// console.log(menuIcons);\n\nconst Navbar = () => {\n\n    const [state, setState] = useState({\n        right: false\n    });\n\n    const toggleSlider = (slider, open) => () => {\n        setState({ ...state, [slider]: open});\n    };\n\n    const classes = useStyles(); // Qui fait appel à la constante \"useStyles\" qui est déclaré tout en haut\n\n    const sideList = slider => (\n        <Box className={classes.menuSliderContainer} component=\"div\" onClick={toggleSlider(slider, false)}>\n            <Avatar className={classes.avatar} src={avatar} alt=\"Issa Demirci\" />\n            <Divider />\n            <List>\n                {menuItems.map((lsItem, key) => (\n                    <ListItem button key={key} component={Link} to={lsItem.listPath}>\n                        <ListItemIcon className={classes.listItem}> {lsItem.listIcon} </ListItemIcon>\n                        <ListItemText className={classes.listItem} primary={lsItem.listText} />\n                    </ListItem>\n                ))}\n            </List>\n            <br />\n            {/* <IconButton onClick={toggleSlider(\"right\", true)} >\n                <ArrowBack style={{color: \"white\"}} />\n                <Button style={{color: \"white\"}}>Retour</Button>\n            </IconButton> */}\n        </Box>\n    )\n    return (\n        <>\n        <Box>\n            <AppBar position=\"static\" style={{background: \"#222\" }}>\n                <Toolbar>\n                    <IconButton onClick={toggleSlider(\"right\", true)} >\n                        <ArrowBack style={{color: \"tomato\"}} />\n                    </IconButton>\n                    <Typography variant=\"h5\" style={{color: \"tan\"}} className=\"portfolio\" > Menu </Typography>\n                    <MobilRightMenuSlider anchor=\"right\" open={state.right} onClose={toggleSlider(\"right\", false)}>\n                        {sideList(\"right\")}\n                        <Footer />\n                    </MobilRightMenuSlider>\n                </Toolbar>\n            </AppBar>\n        </Box>\n        </>\n    );\n};\n\n\n/*********************\n *  Petit modification(entrainement) au niveau de bouton de \"Back\" \n * \n * \nconst theme = createMuiTheme({\n    palette: {\n        primary: blue,\n        background: red,\n    },\n    typography: {\n        fontSize: 15,\n    },\n    overrides: {\n        MuiButton: {\n            root: {\n                backgroundColor: \"#E9967A\",\n                '&:hover': {\n                    backgroundColor: \"red\",\n                }\n            },\n            \n        }\n    },\n}); \n\n*************************************/\n\n\n\n\n\nexport default Navbar;","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Particles from \"react-particles-js\";\n\nconst useStyles = makeStyles({\n    particlesCanva2: {\n        position: \"absolute\",\n        opacity: \"0.5\",\n    }\n});\n\n\nconst Particle = () => {\n    \n    const classes = useStyles();\n\n    return (\n        <>\n            <Particles \n            canvasClassName={classes.particlesCanva2}\n                params={{\n                    particles: {\n                        number: {\n                            value: 40,\n                            density: {\n                                enable: true,\n                                value_area: 600,\n                            }\n                        }, \n                        shape: {\n                            type: \"circle\",\n                            stroke: {\n                                color: \"tomato\",\n                            }\n                        },\n                        size: {\n                            value: 8,\n                            random: true,\n                            anim: {\n                                enable: true,\n                                speed: 6,\n                                size_min: 0.1,\n                                sync: true,\n                            }\n                        },\n                        opacity: {\n                            value: 1,\n                            random: true,\n                            anim: {\n                                enable: true,\n                                speed: 1,\n                                opacity_min: 0.1,\n                                sync: true\n                            }\n                        }\n                    }\n                }}\n            />\n        </>\n    )\n}\n\nexport default Particle;","import React from 'react';\nimport Header from './Header';\nimport Navbar from './Navbar';\n// import Particles from \"react-particles-js\";\n// import { makeStyles } from \"@material-ui/styles\";\n// import Projets from './Projets';\nimport Particle from './Particle';\n\nconst Home = () => {\n\n\n    return (\n        <div>\n            <Navbar />\n            <Header />\n            <Particle />\n            \n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport Navbar from './Navbar';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport { Typography, Box } from \"@material-ui/core\";\nimport Particle from './Particle';\n\nconst useStyles = makeStyles(theme=>({\n    mainContainer: {\n        // background: \"#233\",\n    },\n    timeLine: {\n        position: \"relative\",\n        padding: \"1rem\",\n        margin: \"0 auto\",\n        \"&:before\": {\n            content: \"''\",\n            position: \"absolute\",\n            height: \"100%\",\n            border: \"1px solid tan\",\n            right: \"40px\",\n            top: 0\n        },\n        \"&:after\": {\n            content: \"''\",\n            display: \"table\",\n            clear: \"both\"\n        },\n        [theme.breakpoints.up(\"md\")]:{\n            padding: \"2rem\",\n            \"&:before\": {\n                left: \"calc(50% - 1px)\",\n                right: \"auto\",\n            }\n        }\n    },\n    timeLineItem: {\n        padding: \"1rem\",\n        borderBottom: \"2px solid tan\",\n        position: \"relative\",\n        margin: \"1rem 3rem 1rem 1rem\",\n        clear: \"both\",\n        \"&:after\": {\n            content: \"''\",\n            position: \"absolute\",\n        },\n        \"&:before\": {\n            content: \"''\",\n            position: \"absolute\",\n            right: \"-0.625rem\",\n            top: \"calc(50% - 5px)\",\n            borderStyle: \"solid\",\n            borderColor: \"tomato tomato transparent transparent\",\n            borderWidth: \"0.625rem\",\n            transform: \"rotate(45deg)\",\n        },\n        [theme.breakpoints.up('md')]: {\n            width:\"44%\",\n            margin: \"1rem\",\n            \"&:nth-of-type(2n)\": {\n                float: \"right\",\n                margin: \"1rem\",\n                borderColor: \"tan\"\n            },\n            \"&:nth-of-type(2n):before\": {\n                right: \"auto\",\n                left: \"-0.625rem\",\n                borderColor: \"transparent transparent tomato tomato\",\n            }\n        }\n    },\n\n    timeLineYear: {\n        textAlign: \"center\",\n        maxWidth: \"9.375rem\",\n        margin: \"0 3rem 0 auto\",\n        fontSize: \"1.8rem\",\n        background: \"tomato\",\n        color: \"white\",\n        lineHeight: 1,\n        padding: \"0.5 rem 0 1rem\",\n        \"&:before\": {\n            display: \"none\"\n        },\n        [theme.breakpoints.up(\"md\")]: {\n            textAlign: \"center\",\n            margin: \"0 auto\",\n            \"&:nth-of-type(2n)\": {\n                float: \"none\",\n                margin: \"0 auto\",\n            },\n            \"&:nth-of-type(2n):before\": {\n                display: \"none\"\n            }\n            \n        }\n    },\n    heading: {\n        color: \"tomato\",\n        padding: \"3rem 0\",\n        textTransform: \"uppercase\",\n    },\n    subHeading: {\n        color: \"white\",\n        padding: \"0\",\n        textTransform: \"uppercase\",\n    }\n}));\n\n\nconst Resume = () => {\n\n    const classes = useStyles();\n\n    return (\n        <>\n        <Navbar />\n        <Particle />\n        <Box component=\"header\" className={classes.mainContainer}>\n            <Typography variant=\"h4\" align=\"center\" className={classes.heading} >\n                Experience professionnel\n            </Typography>\n\n            <Box component=\"div\" className={classes.timeLine} >\n                <Typography variant=\"h2\" \n                className={`${classes.timeLineYear} ${classes.timeLineItem}`} > \n                    2013 \n                </Typography>\n               \n                <Box component=\"div\" className={classes.timeLineItem} >\n                    <Typography variant=\"h5\" align=\"center\" className={classes.subHeading}>\n                        ASSISTANT CONDUCTEUR DE TRAVAUX GTM BATIMENTS\n                    </Typography>\n                    <Typography variant=\"body1\" align=\"center\" style={{color: \"tomato\"}}>\n                        (3 semaines)\n                    </Typography>\n                    <Typography variant=\"subtitle1\" align=\"center\" style={{color: \"tan\"}} >\n                        S’occuper des démarches administratives nécessaires, Organiser les réunions d’équipes\n                    </Typography>\n                </Box>\n                <br />\n                <br /> \n                <Typography variant=\"h2\" \n                className={`${classes.timeLineYear} ${classes.timeLineItem}`} > \n                    2014\n                </Typography>\n               \n                <Box component=\"div\" className={classes.timeLineItem} >\n                    <Typography variant=\"h5\" align=\"center\" className={classes.subHeading}>\n                        ASSISTANT TECHNICIEN INFORMATIQUE TÉLÉ MÉNAGER\n                    </Typography>\n                    <Typography variant=\"body1\" align=\"center\" style={{color: \"tomato\"}}>\n                        (4 semaines)\n                    </Typography>\n                    <Typography variant=\"subtitle1\" align=\"center\" style={{color: \"tan\"}} >\n                        Monter, installer et mettre en service els nouveaux matérieles informatiques. <br />\n                        Intervenir en assistance et réparation. \n                    </Typography>\n                </Box>\n\n                <br />\n                <br />\n                <Typography variant=\"h2\" \n                className={`${classes.timeLineYear} ${classes.timeLineItem}`} > \n                    2015-2018\n                </Typography>\n               \n                <Box component=\"div\" className={classes.timeLineItem} >\n                    <Typography variant=\"h5\" align=\"center\" className={classes.subHeading}>\n                        Scolarité (Lycée)\n                    </Typography>\n                </Box>\n\n                <br />\n                <br /> \n                <br />\n                <Typography variant=\"h2\" \n                className={`${classes.timeLineYear} ${classes.timeLineItem}`} > \n                    2019\n                </Typography>\n               \n                <Box component=\"div\" className={classes.timeLineItem} >\n                    <Typography variant=\"h5\" align=\"center\" className={classes.subHeading}>\n                        CHAUFFEUR PRIVÉ\n                    </Typography>\n                    <Typography variant=\"body1\" align=\"center\" style={{color: \"tomato\"}}>\n                        (4 semaines)\n                    </Typography>\n                </Box>\n\n                <Typography variant=\"h2\" className={`${classes.timeLineYear} ${classes.timeLineItem}`} >\n                    2019\n                </Typography>\n                <Box component=\"div\" className={classes.timeLineItem}>\n                    <Typography variant=\"h5\" align=\"center\" className={classes.subHeading} >\n                        SAMSUNG CAMPUS\n                    </Typography>\n                    <Typography variant=\"body1\" align=\"center\" style={{color: \"tomato\"}} >\n                        Bac +2: Développeur Web (Full-Stack)\n                    </Typography>\n                    <Typography variant=\"subtitle1\" align=\"center\" style={{color: \"tan\"}} >\n                        Integrateur-Développeur Web en full-stack <br />\n                    </Typography>\n                </Box>\n\n            </Box>\n        </Box>\n        </>\n    );\n};\n\nexport default Resume;\n\n","import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport {\n    Box,\n    Grid,\n    Card,\n    CardActionArea,\n    CardActions,\n    CardContent,\n    CardMedia,\n    Button,\n    Typography,\n} from \"@material-ui/core\";\nimport Navbar from \"./Navbar\";\nimport project1 from \"../images/images/html-css-javascript-lg.jpg\";\nimport project2 from \"../images/images/html-css-javascript.jpg\";\nimport Particles from \"./Particle\";\n\n\nconst useStyle = makeStyles((theme)=>({\n    mainContainer: {\n        position: \"absolute\",\n        top: \"8%\",\n        zIndex: 1,\n    },\n\n    // Remplacé par les scss donc celui ci est inutile\n    // cardContainer: {\n    //     maxWidth: 400,\n    //     // margin: \"3rem\",\n    //     margin: \"5rem auto\",\n    // }\n}));\n\nconst Projets = () => {\n    const classes = useStyle();\n    return (\n        <>\n        <Box component=\"div\" >\n            <Navbar />\n            <Particles />\n            <Grid container justify=\"center\"  className={classes.mainContainer}>\n\n\n                {/* Projets 1 */}\n                <Grid item xs={12} sm={8} md={6}  >\n                    <Card className=\"projets\">\n                        <CardActionArea >\n                            <CardMedia \n                            component=\"img\" \n                            alt=\"Projet 1\" \n                            height=\"140\" \n                            image={project1} \n                            // className=\"img\"\n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\">\n                                    Portfolio\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                Vous êtes libres d’utiliser toutes les technologies de votre choix. Cependant, il est impératif que votre page\n                                vitrine soit « Flat Design », « Responsive » et « One Page ». Vous trouverez de bonnes définitions à ces 3\n                                termes en vous renseignant sur votre moteur de recherche favori.\n                                Vous devez créer un menu pour faciliter la navigation sur votre site.\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                        <CardActions>\n                            <a href=\"https://issa07.github.io/portfolio/\" target=\"__bank\">\n                            <i className=\"fas fa-plus-circle\" >\n                                <Button size=\"small\" color=\"primary\" >\n                                    Voir le Projet\n                                </Button>\n                            </i>\n                            </a>\n                            <a href=\"https://github.com/issa07/portfolio\" target=\"__bank\">\n                                <Button size=\"small\" color=\"primary\">\n                                    Lien GitHub\n                                </Button>\n                            </a>  \n                        </CardActions>\n                    </Card>\n                </Grid>\n\n\n                {/* Projet 2 */}\n                <Grid item xs={12} sm={8} md={6} >\n                    <Card className=\"projets\">\n                        <CardActionArea>\n                            <CardMedia \n                            component=\"img\" \n                            alt=\"project 3\" \n                            height=\"140\" \n                            image={project2} \n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\">\n                                    e-commerce\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                Vous êtes libres d’utiliser toutes les technologies de votre choix. Cependant, il est impératif que votre page\n                                vitrine soit « Flat Design », « Responsive » et « One Page ». Vous trouverez de bonnes définitions à ces 3\n                                termes en vous renseignant sur votre moteur de recherche favori.\n                                Vous devez créer un menu pour faciliter la navigation sur votre site.\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>  \n                        <CardActions>\n                        <i className=\"fas fa-plus-circle\" >\n                                <Button size=\"small\" color=\"primary\">\n                                    Voir le Projet\n                                </Button>\n                            </i>\n                            <Button size=\"small\" color=\"primary\">\n                                Lien GitHub\n                            </Button>\n                        </CardActions>\n                    </Card>\n                </Grid>\n\n\n                {/* Projets 3  */}\n                <Grid item xs={12} sm={8} md={6} >\n                    <Card className=\"projets\">\n                        <CardActionArea>\n                            <CardMedia \n                            component=\"img\" \n                            alt=\"project 2\" \n                            height=\"140\" \n                            image={project2} \n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\">\n                                    Maquette resposive\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                Le site doit être visible depuis un ordinateur, une tablette ou un téléphone. Les images doivent toujours être affichées à 100%. C’est à dire que vous devez prévoir des images hautes et basses définitions. Le redimensionnement du navigateur (de manière à émuler un autre périphérique) doit par conséquent influer sur l’URL des images affichées.\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                        <CardActions>\n                            <a href=\"www.google.com\" target=\"__bank\">\n                            <i className=\"fas fa-plus-circle\" >\n                                <Button size=\"small\" color=\"primary\">\n                                 Voir le Projet\n                                </Button>\n                            </i>\n                            </a>\n                            <a href=\"https://github.com/issa07/maquette-responsive\" target=\"__bank\">\n                                <Button size=\"small\" color=\"primary\">\n                                    Lien GitHub\n                                </Button>\n                            </a>\n                        </CardActions>\n                    </Card>\n                </Grid>\n\n\n                {/* Projet 4 */}\n                <Grid item xs={12} sm={8} md={6} >\n                    <Card className=\"projets\">\n                        <CardActionArea>\n                            <CardMedia \n                            component=\"img\" \n                            alt=\"project 4\" \n                            height=\"140\" \n                            image={project1} \n                            />\n                            <CardContent>\n                                <Typography gutterBottom variant=\"h5\">\n                                    Portfolio 2\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                Le site doit être visible depuis un ordinateur, une tablette ou un téléphone. Les images doivent toujours être affichées à 100%. C’est à dire que vous devez prévoir des images hautes et basses définitions. Le redimensionnement du navigateur (de manière à émuler un autre périphérique) doit par conséquent influer sur l’URL des images affichées.\n                                </Typography>\n                            </CardContent>\n                        </CardActionArea>\n                        <CardActions>\n                        <i className=\"fas fa-plus-circle\" >\n                                <Button size=\"small\" color=\"primary\">\n                                    Voir le Projet\n                                </Button>\n                            </i>\n                            <Button size=\"small\" color=\"primary\">\n                                Lien GitHub\n                            </Button>\n                        </CardActions>\n                    </Card>\n                </Grid>\n            </Grid>\n        </Box>\n        </>\n    );\n};\n\nexport default Projets;","import React, { Component } from 'react';\nimport * as emailjs from \"emailjs-com\";\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\nimport {TextField, Typography, Button, Grid, Box} from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport Navbar from './Navbar';\n\nconst useStyles = makeStyles(theme=>({\n    form: {\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        position: \"absolute\",\n    },\n    bouton: {\n        marginTop: \"1rem\",\n        color: \"tomato\",\n        borderColor: \"tomato\",\n    },\n    messageSent: {\n        color: \"red\",\n    }\n}));\n\n// Méthode 2:\nconst InputField = withStyles({\n    root: {\n        \"& label.Mui-focused\": {\n            color: \"tomato\",\n        },\n        \"& label\": {\n            color: \"tan\",\n        },\n        \"& .MuiOutlinedInput-root\": {\n            \"& fieldset\": {\n                borderColor: \"tan\",\n            },\n            \"&:hover fieldset\": {\n                borderColor: \"tan\",\n            },\n            \"&.Mui-focused fieldset\": {\n                borderColor: \"tan\",\n            },\n        },\n    },\n})(TextField);\n\n\nconst initialState = {\n    name: \"\",\n    email: \"\",\n    message: \"\",\n    nameError: \"\",\n    emailError: \"\",\n    messageError: \"\",\n\n    msgSent: \"\",\n}\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState;\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    };\n\n    \n    handleChange = (e) => {\n        // this.setState({ [e.target.name]: e.target.value });\n\n        const isCheckbox = e.target.type === \"checkbox\";\n        this.setState({\n            [e.target.name]: isCheckbox\n            ? e.target.checked\n            : e.target.value\n        });\n    };\n\n    validate = () => {\n        let nameError = \"\";\n        let emailError = \"\";\n        let messageError = \"\";\n        // let msgSent = \"\";\n\n        if (!this.state.name) {\n            nameError = \"Entrez votre nom !\";\n        } \n        if (!this.state.message) {\n            messageError = \"Entrez votre message !\";\n        } \n        if (!this.state.email.includes('@')) {\n            emailError = \"Email non valide\";\n        }\n        if (emailError || nameError || messageError) {\n            this.setState({ emailError, nameError, messageError });\n            return false;\n        }\n        return true;\n    }\n    \n    handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = this.validate();\n        let msgSent = \"\";\n\n        if (isValid) {\n            // Emailjs used for send the values in account of gmail (contactmeportfolio01@gmail.com)\n            emailjs\n            .sendForm(\n                \"gmail\",\n                \"portfolio\",\n                \"#formulaire\",\n                \"user_fQbOW4rJWmlEK6hFAGLdm\"            \n                )\n                .then()\n                .catch();\n                this.setState({\n                    name: \"\",\n                    email: \"\",\n                    message: \"\",\n                });\n\n                \n                // Initializ form\n                this.setState(initialState);\n                \n                // console.log(this.state);\n                msgSent = \"Votre message a bien été envoyé. \"\n                this.setState({msgSent});\n                return true;\n        }\n    };\n\n    render() {\n        const classes = this.props.classes;\n        \n        return (  \n            <div>\n                <Box component=\"div\" className=\"bbody\">\n                    <Navbar />  \n                    <Grid container justify=\"center\" className=\"form\">\n                        <Box className={classes.form} >\n                            {this.state.msgSent ? (\n                                <div style={{fontSize: 20, color: \"red\"}} >\n                                    {this.state.msgSent} \n                                </div> ): null }\n\n                            <br />\n                            <Typography variant=\"h5\" className=\"contactez-moi\">\n                                Contactez-moi...\n                            </Typography>\n                            <form\n                            onSubmit={this.handleSubmit.bind(this)}\n                            id=\"formulaire\">\n\n                                <InputField \n                                className=\"inputField\" \n                                fullWidth={true} \n                                id=\"name\"\n                                name=\"name\"\n                                value={this.state.name}\n                                onChange={this.handleChange}\n                                // onChange={handleChange}\n                                label=\"Name\" \n                                variant=\"outlined\" \n                                inputProps={{style: {color: \"white\"}}}\n                                margin=\"dense\" \n                                size=\"medium\" />\n\n                                {this.state.nameError ? (\n                                <div style={{fontSize: 14, color: \"red\"}} >\n                                    {this.state.nameError} \n                                </div> ): null }\n\n                                <br />\n                                <InputField \n                                className=\"inputField\" \n                                fullWidth={true} \n                                id=\"email\"\n                                name=\"email\"\n                                value={this.state.email}\n                                onChange={this.handleChange}\n                                // onChange={handleChange}\n                                label=\"Email\" \n                                variant=\"outlined\" \n                                inputProps={{style: {color: \"white\"}}}\n                                margin=\"dense\" \n                                size=\"medium\"/>\n\n                                {this.state.emailError ? (\n                                <div style={{fontSize: 14, color: \"red\"}} >\n                                    {this.state.emailError} \n                                </div> ): null }\n\n                                <br />\n                                <InputField\n                                className=\"inputField\" \n                                multiline\n                                rows={8}\n                                fullWidth={true} \n                                id=\"message\"\n                                name=\"message\"\n                                value={this.state.message}\n                                onChange={this.handleChange}\n                                // onChange={handleChange}\n                                label=\"Message\" \n                                variant=\"outlined\" \n                                inputProps={{style: {color: \"white\"}}}\n                                margin=\"dense\" \n                                size=\"medium\"\n                                />\n\n                                {this.state.messageError ? (\n                                <div style={{fontSize: 14, color: \"red\"}} >\n                                    {this.state.messageError} \n                                </div> ): null }\n\n                                <br />\n                                <Button \n                                className={classes.bouton} \n                                variant=\"outlined\" \n                                fullWidth={true} \n                                endIcon={<SendIcon />} \n                                // onSubmit={this.handleSubmit.bind(this)}\n                                type=\"submit\"\n                                >\n                                Envoyez\n                                </Button>\n                            </form>\n                        </Box>\n                    </Grid>\n                </Box>\n            </div>\n        )\n    }\n}\n\n\nexport default () => {\n    const classes = useStyles();\n    // const { handleChange, values } = useForm();\n    return (\n        <Contact classes={classes}/>\n    )\n}\n\n","import React from 'react';\n// import { Route } from \"react-router-dom\";\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport './App.css';\n\nimport Home from './components';\nimport Resume from './components/Resume';\nimport Projets from './components/Projets';\nimport Contact from './components/Contact';\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <CssBaseline/>\n        <Switch>\n          <Route exact path=\"/portfolio2\" component={Home} />\n          <Route path=\"/resume\" component={Resume} />\n          <Route path=\"/projets\" component={Projets} />\n          <Route path=\"/contact\" component={Contact} />\n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/settings.scss';\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// serviceWorker.unregister();\n\nReactDOM.render(\n    <Router>\n        <App/>\n    </Router>, \n    document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/avatar3.ecb80de0.png\";"],"sourceRoot":""}